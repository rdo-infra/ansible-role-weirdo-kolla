---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#

- block:
    # Kolla tests expect a second block device configured in a specific way for use with docker.
    # The following is is just the ansible version for:
    # https://github.com/openstack/kolla/blob/a13a25b4025384bb6a9f981206a24a4e999187f3/tests/setup_centos.sh#L21-L31
    - name: Create a sparse file for block device
      command: "dd of=/tmp/kolla-block bs=1024 count=0 seek=70000000"

    - name: Setup loopback device
      command: |
        losetup /dev/{{ loopback_device }} /tmp/kolla-block

    - name: Partition loopback device
      command: |
        parted /dev/{{ loopback_device }} -s -- mklabel msdos mkpart pri 1 -1

    - name: Create kolla01 PV/VG
      lvg:
        vg: "kolla01"
        pvs: "/dev/{{ loopback_device }}p1"

    - name: Create thin01 lv on top of kolla01
      lvol:
        vg: "kolla01"
        lv: "thin01"
        size: "60G"

    - name: Create thin01meta on top of kolla01
      lvol:
        vg: "kolla01"
        lv: "thin01meta"
        size: "2G"

    - name: Ensure the pools are thin provisioned
      shell: |
        yes | lvconvert \
          --type thin-pool \
          --poolmetadata kolla01/thin01meta \
          kolla01/thin01

    - name: Setup docker to use the logical volumes
      replace:
        dest: "/usr/lib/systemd/system/docker.service"
        regexp: "(ExecStart)=(.+)"
        replace: '\1=/usr/bin/docker daemon --storage-driver devicemapper --storage-opt dm.fs=xfs --storage-opt dm.thinpooldev=kolla01-thin01 --storage-opt dm.use_deferred_removal=true'

    - name: Reload systemctl configuration
      command: "systemctl daemon-reload"

    - name: Ensure docker is started
      service:
        name: "docker"
        state: "started"

    # Need to add user to docker group sudoers and install requirements globally:
    # https://bugs.launchpad.net/kolla/+bug/1518652
    - name: Allow user root to sudo to the docker group
      lineinfile:
        dest: "/etc/sudoers.d/docker"
        line: "root ALL=(:docker) NOPASSWD: ALL"
        create: "yes"
        mode: "0400"
        owner: "root"
        group: "root"

    - name: Clone upstream Kolla repository
      git:
        repo: "{{ repository }}"
        dest: "{{ clone_path }}"
        version: "{{ version }}"

    - name: Set kolla-build to use delorean current repositories
      ini_file:
        dest: "{{ clone_path }}/etc/kolla/kolla-build.conf"
        section: "[kolla-build]"
        option: "rpm_setup_config"
        value: "{{ delorean_url }},{{ delorean_deps_url }}"
        backup: "yes"

    - name: Copy default configuration to filesystem
      command: "cp -a etc/kolla /etc/"
      args:
        chdir: "{{ clone_path }}"

    # https://bugs.launchpad.net/kolla/+bug/1528093
    - name: Install ansible if necessary
      lineinfile:
        dest: "{{ clone_path }}/requirements.txt"
        regexp: "^ansible.*"
        state: "present"
        line: "ansible<2.0"
      when: test == "deploy-centos-binary"

    # Requirements installed globally, see:
    # https://bugs.launchpad.net/kolla/+bug/1518652
    - name: Install requirements globally
      pip:
        requirements: "{{ clone_path }}/requirements.txt"
        state: "present"

    - name: Install test-requirements globally
      pip:
        requirements: "{{ clone_path }}/test-requirements.txt"
        state: "present"
  vars:
    task: "tasks/setup.yml"
  rescue:
    - name: Failure occurred, executing rescue
      include: roles/common/tasks/rescue.yml
